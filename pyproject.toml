[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = [
    "itau_parser_ultimate",
    "golden_validator", 
    "ai_enhanced_parser",
    "script"
]

[tool.setuptools.packages.find]
exclude = [
    "lab*",
    "lab2*", 
    "mlruns*",
    "contest*",
    "all_pdfs*",
    "chroma_db*",
    "notebooks*", 
    "csv_output*",
    "test_output*",
    "best_outputs*",
    "test_outputs*",
    "all_pdfs_output*",
    "production_parser*",
    "docs*"
]

[project]
name = "itau-pdf-parser"
version = "1.0.0"
description = "Ultimate ItaÃº PDF to CSV parser with 100% accuracy"
authors = [{name = "Your Name", email = "your.email@example.com"}]
license = "MIT"
requires-python = ">=3.10"
dependencies = [
    "pdfplumber>=0.9.0",
    "PyYAML>=6.0",
    "python-dateutil>=2.8.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "ruff>=0.5.0",
    "mypy>=0.990",
    "pre-commit>=3.0.0",
    "act>=0.2.0",
]
ai = [
    "openai>=1.0.0",
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "mlflow>=2.0.0",
]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "S",  # bandit security
]
ignore = [
    "S101", # Use of assert detected (OK in tests)
    "B008", # Do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"test_*.py" = ["S101"]
"*_test.py" = ["S101"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=.",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--verbose"
]
